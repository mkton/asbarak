/*
 * Generated by: org.ow2.frascati.tinfi.opt.oo.InterceptorClassGenerator
 * on: Mon Aug 23 14:31:14 CEST 2010
 */

package org.ow2.podcasti.model;


public class PodcastiDBServiceInterceptorSCAIntent
extends org.ow2.frascati.tinfi.TinfiComponentInterceptor<org.ow2.podcasti.model.PodcastiDBService>
implements org.ow2.podcasti.model.PodcastiDBService,org.objectweb.fractal.julia.Interceptor {

  private static java.lang.reflect.Method[] METHODS;
  public PodcastiDBServiceInterceptorSCAIntent()  {
  }

  private PodcastiDBServiceInterceptorSCAIntent(Object obj)  {
    setFcItfDelegate(obj);
  }

  public void initFcController(org.objectweb.fractal.julia.InitializationContext ic) throws org.objectweb.fractal.api.factory.InstantiationException  {
    super.initFcController(ic);
    initIntentHandlersMap(METHODS);
  }

  public Object clone()  {
    PodcastiDBServiceInterceptorSCAIntent clone = new PodcastiDBServiceInterceptorSCAIntent(getFcItfDelegate());
    initFcClone(clone);
    return clone;
  }

  public java.util.HashSet<org.ow2.podcasti.model.Feed> getFeeds()  {
    java.util.List<org.ow2.frascati.tinfi.control.intent.IntentHandler> handlers = intentHandlersMap.get(METHODS[0]);
    try {
      if( handlers.size() == 0 ) {
        java.util.HashSet<org.ow2.podcasti.model.Feed> ret = impl.getFeeds();
        return ret;
      }
      else {
        org.ow2.frascati.tinfi.control.component.ReconfigurableComponentContext compctx = getFcCompCtxCtrlItf();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl<org.ow2.podcasti.model.PodcastiDBService> ijp = new org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl();
        ijp.init(handlers,compctx,itf,impl,METHODS[0]);
    java.util.HashSet<org.ow2.podcasti.model.Feed> ret = (java.util.HashSet<org.ow2.podcasti.model.Feed>) ijp.proceed();
    return ret;
      }
    }
    catch( Throwable t ) {
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  public void addFeed(final java.net.URI arg0) throws java.lang.IllegalArgumentException,java.net.MalformedURLException,com.sun.syndication.io.FeedException,java.io.IOException  {
    java.util.List<org.ow2.frascati.tinfi.control.intent.IntentHandler> handlers = intentHandlersMap.get(METHODS[2]);
    try {
      if( handlers.size() == 0 ) {
        impl.addFeed(arg0);
      }
      else {
        org.ow2.frascati.tinfi.control.component.ReconfigurableComponentContext compctx = getFcCompCtxCtrlItf();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl<org.ow2.podcasti.model.PodcastiDBService> ijp = new org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl();
        ijp.init(handlers,compctx,itf,impl,METHODS[2],arg0);
    ijp.proceed();
    Object ret = null;
      }
    }
    catch( Throwable t ) {
      if( t instanceof java.lang.IllegalArgumentException ) {
        throw (java.lang.IllegalArgumentException) t;
      }
      if( t instanceof java.net.MalformedURLException ) {
        throw (java.net.MalformedURLException) t;
      }
      if( t instanceof com.sun.syndication.io.FeedException ) {
        throw (com.sun.syndication.io.FeedException) t;
      }
      if( t instanceof java.io.IOException ) {
        throw (java.io.IOException) t;
      }
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  public void removeFeed(final java.lang.Integer arg0) throws org.ow2.podcasti.model.UnavailableElementException  {
    java.util.List<org.ow2.frascati.tinfi.control.intent.IntentHandler> handlers = intentHandlersMap.get(METHODS[1]);
    try {
      if( handlers.size() == 0 ) {
        impl.removeFeed(arg0);
      }
      else {
        org.ow2.frascati.tinfi.control.component.ReconfigurableComponentContext compctx = getFcCompCtxCtrlItf();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl<org.ow2.podcasti.model.PodcastiDBService> ijp = new org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl();
        ijp.init(handlers,compctx,itf,impl,METHODS[1],arg0);
    ijp.proceed();
    Object ret = null;
      }
    }
    catch( Throwable t ) {
      if( t instanceof org.ow2.podcasti.model.UnavailableElementException ) {
        throw (org.ow2.podcasti.model.UnavailableElementException) t;
      }
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  public java.net.URI getFeed(final java.lang.Integer arg0) throws org.ow2.podcasti.model.UnavailableElementException  {
    java.util.List<org.ow2.frascati.tinfi.control.intent.IntentHandler> handlers = intentHandlersMap.get(METHODS[3]);
    try {
      if( handlers.size() == 0 ) {
        java.net.URI ret = impl.getFeed(arg0);
        return ret;
      }
      else {
        org.ow2.frascati.tinfi.control.component.ReconfigurableComponentContext compctx = getFcCompCtxCtrlItf();
        org.objectweb.fractal.api.Interface itf = getFcItf();
        org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl<org.ow2.podcasti.model.PodcastiDBService> ijp = new org.ow2.frascati.tinfi.control.intent.IntentJoinPointImpl();
        ijp.init(handlers,compctx,itf,impl,METHODS[3],arg0);
    java.net.URI ret = (java.net.URI) ijp.proceed();
    return ret;
      }
    }
    catch( Throwable t ) {
      if( t instanceof org.ow2.podcasti.model.UnavailableElementException ) {
        throw (org.ow2.podcasti.model.UnavailableElementException) t;
      }
      if( t instanceof RuntimeException ) {
        throw (RuntimeException) t;
      }
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(t);
    }
  }

  static {
    try {
      METHODS = new java.lang.reflect.Method[]{
        org.ow2.podcasti.model.PodcastiDBService.class.getMethod("getFeeds"),
        org.ow2.podcasti.model.PodcastiDBService.class.getMethod("removeFeed",java.lang.Integer.class),
        org.ow2.podcasti.model.PodcastiDBService.class.getMethod("addFeed",java.net.URI.class),
        org.ow2.podcasti.model.PodcastiDBService.class.getMethod("getFeed",java.lang.Integer.class),
      };
    }
    catch( NoSuchMethodException e ) {
      throw new org.ow2.frascati.tinfi.TinfiRuntimeException(e);
    }
  }

}
