/*
 * Generated by: org.ow2.frascati.tinfi.opt.oo.InitializerOOCtrlClassGenerator
 * on: Mon Aug 23 14:31:14 CEST 2010
 */

package juliac.generated;


public class scaCompositeFCcbe2e614
extends juliac.generated.scaComposite
implements org.objectweb.fractal.juliac.runtime.Factory {

  public org.objectweb.fractal.api.Type getFcInstanceType()  {
    try {
      return new org.objectweb.fractal.julia.type.BasicComponentType( new org.objectweb.fractal.api.type.InterfaceType[]{new org.objectweb.fractal.julia.type.BasicInterfaceType("podcasti-ui","org.ow2.podcasti.ui.PodcastiUIService",false,false,false),} );
    }
    catch( org.objectweb.fractal.api.factory.InstantiationException ie ) {
      throw new org.objectweb.fractal.juliac.runtime.RuntimeException(ie);
    }
  }

  public Object getFcControllerDesc()  {
      return "scaComposite";
  }

  public Object getFcContentDesc()  {
      return null;
  }

  public Object newFcContent() throws org.objectweb.fractal.api.factory.InstantiationException  {
    return null;
  }

  public org.objectweb.fractal.api.Component newFcInstance() throws org.objectweb.fractal.api.factory.InstantiationException  {
    Object content = newFcContent();
    return newFcInstance(content);
  }

  public org.objectweb.fractal.api.Component newFcInstance(Object content) throws org.objectweb.fractal.api.factory.InstantiationException  {
    org.objectweb.fractal.julia.InitializationContext ic = newFcInitializationContext(content);
    ic.content = null;
    org.objectweb.fractal.api.Interface proxy;
    Object intercept;
    org.objectweb.fractal.api.Component proxyForCompCtrl = (org.objectweb.fractal.api.Component) ic.interfaces.get("component");
    ic.type = new org.objectweb.fractal.julia.type.BasicComponentType( new org.objectweb.fractal.api.type.InterfaceType[]{new org.objectweb.fractal.julia.type.BasicInterfaceType("component","org.objectweb.fractal.api.Component",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("sca-component-controller","org.ow2.frascati.tinfi.control.component.ReconfigurableComponentContext",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("binding-controller","org.objectweb.fractal.api.control.BindingController",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("content-controller","org.objectweb.fractal.api.control.ContentController",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("super-controller","org.objectweb.fractal.julia.control.content.SuperControllerNotifier",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("lifecycle-controller","org.objectweb.fractal.julia.control.lifecycle.LifeCycleCoordinator",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("name-controller","org.objectweb.fractal.api.control.NameController",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("sca-intent-controller","org.ow2.frascati.tinfi.control.intent.SCABasicIntentController",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("sca-property-controller","org.ow2.frascati.tinfi.control.property.SCAPropertyController",false,false,false),new org.objectweb.fractal.julia.type.BasicInterfaceType("podcasti-ui","org.ow2.podcasti.ui.PodcastiUIService",false,false,false),} );
    intercept = new org.ow2.podcasti.ui.PodcastiUIServiceInterceptorSCAIntent();
    ic.controllers.add(intercept);
    ((org.objectweb.fractal.julia.Interceptor)intercept).setFcItfDelegate(content);
    proxy = new org.ow2.podcasti.ui.PodcastiUIServiceFcInItf(proxyForCompCtrl,"podcasti-ui",new org.objectweb.fractal.julia.type.BasicInterfaceType("podcasti-ui","org.ow2.podcasti.ui.PodcastiUIService",false,false,false),false,intercept);
    ic.interfaces.put("podcasti-ui",proxy);
    ((org.ow2.frascati.tinfi.TinfiComponentInterceptor)intercept).setFcItf(proxy);
    proxy = new org.ow2.podcasti.ui.PodcastiUIServiceFcOutItf(proxyForCompCtrl,"podcasti-ui",new org.objectweb.fractal.julia.type.BasicInterfaceType("podcasti-ui","org.ow2.podcasti.ui.PodcastiUIService",true,false,false),true,intercept);
    ic.internalInterfaces.put("podcasti-ui",proxy);
    initFcController(ic);
    return proxyForCompCtrl;
  }

}
